name: CI/CD Pipeline

on:
  push:
    branches:
      - main   

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

     # Step 2: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      # Step 3: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Step 4: Build Docker Images
      - name: Build Docker Images
        run: |
          IMAGE_TAG=latest
          
          # Build Flaskapp Image
          docker build -t clo835-assign01:$IMAGE_TAG ./flaskapp
          
          # Build SQL Image
          docker build -t sql:$IMAGE_TAG ./sql

      # Step 5: Tag & Push to ECR
      - name: Tag & Push to ECR
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          REGION=us-east-1
          IMAGE_TAG=latest

          # Flaskapp Image
          FLASK_REPO_NAME=flaskapp
          FLASK_ECR_URI="$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$FLASK_REPO_NAME"
          docker tag clo835-assign01:$IMAGE_TAG $FLASK_ECR_URI:$IMAGE_TAG
          docker push $FLASK_ECR_URI:$IMAGE_TAG

          # SQL Image
          SQL_REPO_NAME=sql
          SQL_ECR_URI="$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$SQL_REPO_NAME"
          docker tag sql:$IMAGE_TAG $SQL_ECR_URI:$IMAGE_TAG
          docker push $SQL_ECR_URI:$IMAGE_TAG

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    
      # Step 6: Checkout Code for Deployment
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 7: Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Debug info
            echo "AWS Account ID: $(aws sts get-caller-identity --query Account --output text)"
            echo "ECR URI: $ECR_URI"

            ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
            REGION=us-east-1
            IMAGE_TAG=latest

            # Flaskapp Image
            FLASK_REPO_NAME=flaskapp
            FLASK_ECR_URI="$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$FLASK_REPO_NAME"

            # SQL Image
            SQL_REPO_NAME=sql
            SQL_ECR_URI="$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$SQL_REPO_NAME"

            # Login to ECR
            aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $FLASK_ECR_URI
            aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $SQL_ECR_URI

            # Pull images
            docker pull $FLASK_ECR_URI:$IMAGE_TAG
            docker pull $SQL_ECR_URI:$IMAGE_TAG

            # Run Flaskapp container
            docker run -d -p 8080:8080 $FLASK_ECR_URI:$IMAGE_TAG

            # Run SQL container
            docker run -d -p 3306:3306 $SQL_ECR_URI:$IMAGE_TAG
